 Trong Golang, "visibility" hay "visibility of a name" (tính hiển thị của một tên) liên quan đến phạm vi mà một biến, hàm, struct, interface, 
 hoặc bất kỳ định danh (identifier) nào khác có thể được truy cập từ các phần khác của chương trình. 
 Có hai cấp độ tính hiển thị trong Go: public (công cộng) và private (riêng tư).


 1. Public (Công cộng): Nếu tên của một định danh bắt đầu bằng một chữ cái viết hoa, 
 nó được coi là có tính hiển thị công cộng. Điều này có nghĩa là nó có thể được truy cập từ bất kỳ package (gói) nào khác. 
 Đây là cách mà bạn "xuất bản" các hàm, biến, struct, interfaces,... để chúng có thể được sử dụng bởi các phần khác của chương trình hoặc bởi 
 các chương trình khác sử dụng package của bạn.

Ví dụ: func PublicFunction() {} là một hàm công cộng.

 2. Private (Riêng tư): Nếu tên của một định danh bắt đầu bằng một chữ cái viết thường, nó được coi là có tính hiển thị riêng tư. 
 Điều này có nghĩa là nó chỉ có thể được truy cập từ bên trong package mà nó được khai báo. Đây là cách để bạn giấu đi các chi tiết triển khai 
 nội bộ của package, ngăn chặn các phần khác của chương trình tương tác trực tiếp với những chi tiết đó.

Ví dụ: func privateFunction() {} là một hàm riêng tư.


Đây là một phần quan trọng trong việc thiết kế giao diện của package trong Go, giúp bạn kiểm soát việc truy cập các chức năng và dữ liệu, 
và là một phần của nguyên tắc thiết kế phần mềm chung về việc che giấu thông tin (information hiding).